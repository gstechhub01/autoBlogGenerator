// This Prisma schema is designed to migrate your local SQLite and JSON config data to Prisma Cloud.
// Adjust field types and relations as needed for your actual data structure.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // For Prisma Cloud, use PostgreSQL
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  passwordHash String
  name         String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  articles     Article[]
  siteConfigs  SiteConfig[]
  blogConfigs  BlogConfig[]
  keywords     Keyword[]
}

model BlogConfig {
  id                   Int       @id @default(autoincrement())
  userId               Int
  user                 User      @relation(fields: [userId], references: [id])
  sites                Json
  links                Json
  tags                 Json
  topics               Json
  autoTitle            Boolean
  articleCount         Int
  keywordsPerArticle   Int? // Number of keywords per article
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  keywords             Keyword[]
  hasRun               Boolean   @default(false)
  scheduleTime         DateTime?
  publishIntervalMinutes Int? // Interval in minutes between publishes
  lastPublishedAt      DateTime?
  exhaustAllKeywords   Boolean   @default(true) // <-- Added for backend logic
  status               String?   @default("pending")
  processingLog        Json?
  startedAt            DateTime?
  finishedAt           DateTime?
}

model SiteConfig {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  name      String
  url       String
  username  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([url, username])
}

model Article {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  title     String
  body      String
  image     String?
  siteUrl   String   // New: The site where the article is published
  publishedUrl String? // New: The URL of the published blog post
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Keyword {
  id          Int         @id @default(autoincrement())
  keyword     String
  published   Boolean     @default(false)
  publishedAt DateTime?
  publishedOn String[] // Array of site URLs or site names
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  configId    Int?
  config      BlogConfig? @relation(fields: [configId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  scheduledTime DateTime? // Optional: when this keyword should be published
}
